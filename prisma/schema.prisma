// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  username      String    @unique
  password      String
  role          Role      @default(STUDENT)
  first_name    String?
  last_name     String?
  date_of_birth DateTime? @default(now()) @db.Date
  pictureURL    String?
  student       Student?
  teacher       Teacher?
  admin         Admin?
  createdAt     DateTime  @default(now())
}

model Admin {
  userId Int  @unique
  user   User @relation(fields: [userId], references: [id])
}

model Student {
  userId    Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  class     Class   @relation(fields: [classId], references: [id])
  classId   Int
  section   Section @relation(fields: [sectionId], references: [id])
  sectionId Int
}

model Teacher {
  userId   Int       @id @default(autoincrement())
  user     User      @relation(fields: [userId], references: [id])
  class    Class[]
  subjects Subject[]
}

model Class {
  id           Int       @id @default(autoincrement())
  name         String
  rank         Int
  students     Student[]
  sections     Section[]
  subjects     Subject[]
  classTeacher Teacher   @relation(fields: [teacherId], references: [userId])
  teacherId    Int
}

model Section {
  id       Int       @id @default(autoincrement())
  name     String
  class    Class     @relation(fields: [classId], references: [id])
  classId  Int
  students Student[]
  subjects Subject[]
}

model Subject {
  id        Int     @id @default(autoincrement())
  name      String
  class     Class   @relation(fields: [classId], references: [id])
  classId   Int
  section   Section @relation(fields: [sectionId], references: [id])
  sectionId Int
  teacher   Teacher @relation(fields: [teacherId], references: [userId])
  teacherId Int
  topics    Topic[]
}

model Topic {
  id          Int          @id @default(autoincrement())
  title       String
  description String
  subject     Subject      @relation(fields: [subjectId], references: [id])
  subjectId   Int
  assignments Assignment[]
}

model Assignment {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  topic       Topic    @relation(fields: [topicId], references: [id])
  topicId     Int
  deadline    DateTime
  createdAt   DateTime @default(now())
}


enum Role {
  STUDENT
  TEACHER
  ADMIN
}
